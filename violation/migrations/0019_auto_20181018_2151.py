# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-10-18 21:51
from __future__ import unicode_literals

import os

from django.db import migrations, models, connection
import django.db.models.deletion
from django.conf import settings


def remake_views(apps, schema_editor):
    sql_folder_path = os.path.join(settings.BASE_DIR, 'sfm_pc/management/commands/sql')

    violation_view = os.path.join(sql_folder_path, 'violation_view.sql')
    violation_source_view = os.path.join(sql_folder_path, 'violation_sources_view.sql')
    violation_export_view = os.path.join(sql_folder_path, 'violation_all_export_view.sql')

    with open(violation_view) as vv, open(violation_source_view) as vsv, open(violation_export_view) as vev:
        with connection.cursor() as curs:
            curs.execute(vv.read())
            curs.execute(vsv.read())
            curs.execute(vev.read())


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ('violation', '0018_auto_20180821_1457'),
        ('location', '0005_remove_location_admin_level'),
    ]

    state_operations = [
        migrations.AlterField(
            model_name='violationlocation',
            name='value',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='location.Location'),
        ),
    ]

    database_operations = [
        migrations.RunSQL('DROP MATERIALIZED VIEW IF EXISTS violation'),
        migrations.RunSQL('DROP MATERIALIZED VIEW IF EXISTS violation_all_export'),
        migrations.RunSQL('DROP MATERIALIZED VIEW IF EXISTS violation_sources'),
        migrations.RunSQL('ALTER TABLE violation_violationlocation ADD COLUMN geom_value geometry(Geometry,4326)',
                          reverse_sql='ALTER TABLE violation_violationlocation DROP COLUMN geom_value'),
        migrations.RunSQL('''
            UPDATE violation_violationlocation SET
              geom_value=value
        ''',
        reverse_sql='''
            UPDATE violation_violationlocation SET
              geom_value=NULL
        '''),
        migrations.RunSQL('''
            UPDATE violation_violationlocation SET
              value=NULL
        ''',
        reverse_sql='''
            UPDATE violation_violationlocation SET
              value=geom_value
        '''),
        migrations.RunSQL('''
            DROP INDEX IF EXISTS violation_violationlocation_value_id;
        '''),
        migrations.RunSQL('''
            ALTER TABLE violation_violationlocation ALTER COLUMN value TYPE bigint USING NULL
        ''',
        reverse_sql='''
            UPDATE violation_violationlocation SET
              value=geom_value
        '''),
        migrations.RunSQL('''
            ALTER TABLE violation_violationlocation RENAME COLUMN value TO value_id
        ''',
        reverse_sql='''
            ALTER TABLE violation_violationlocation RENAME COLUMN value_id TO value
        '''),
        migrations.RunPython(remake_views),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(state_operations=state_operations,
                                            database_operations=database_operations)
    ]
